[["index.html", "Network Medicine Chapter 1 Workshop in Advanced Bioinformatics: Network Medicine. 1.1 What are networks? 1.2 Terminology", " Network Medicine Deisy Morselli Gysi 2021-02-04 Chapter 1 Workshop in Advanced Bioinformatics: Network Medicine. Network medicine (NetMed) is a field of Network Science that uses Systems Biology to understand its impact on medicine, and it is mostly focused on network topology. In NetMed, we often use biological networks to represent the topological space and it is used to identify disease modules, their relationship to other diseases, drug repurpusing, and drug combinations. The biological networks often used for it are based on protein-protein interactions (PPI), Gene-Disease-Associations (GDA), and Drug-Targets. In this workshop, we will learn: how to identify disease modules (Session 3.1); how to predict disease comorbidities (Session 3.3); how to repurpuse drugs using a network approach (Session 4.1). 1.1 What are networks? Adapted from Deisy Morselli Gysi and Nowick (2020). Network Science is broadly employed in many fields: from understanding how friends bond in a party to how animals interact; from how superheroes appear in the same comic books to how genes can be related to a specific biological process. Network analysis is especially beneficial for understanding complex systems, in all research fields. Examples of complex biological or medical systems include gene regulatory, ecological, and neuropsychology networks. In this workshop, the focus is given to applications of Network Science to the Medical Sciences. Here, I will start by introducing the basic network terminologies and then explore how can we define and identify disease modules, identify disease commorbidities, and lastly, we will learn how to repurpuse drugs for diseases with known modules. For each step, I will then present some classical and some new studies. It is expected some degree of familiarity with R, ggplot2, tidyr, and igraph. 1.2 Terminology While the nature of each system, i.e. what its entities are and what kind of interactions they have, is different, there are common notations. A short review of common network terms can be found in Session 1.2.1, and a brief review of biological terms can be found in Session 1.2.2. The set of interactions among a set of entities is, in general, called a graph or a network (Newman 2018; Albert-Láslzo Barabási 2016). In graph theory, each entity is called a vertex, while in network notation it is called a node (Albert-Láslzo Barabási 2016). Accordingly, the connections between two entities are called edges or links, respectively (Albert-Láslzo Barabási 2016). In this workshop, I will always use the network notation, unless otherwise specified. The total number of nodes in a network is often denoted as N, and the number of links in a network is denoted as L. While nodes can receive a label, links in general, are not labeled (Albert-Láslzo Barabási 2016) (although, in many cases, weights can also be perceived as a label). A network can be represented mathematically as an adjacency matrix (usually denoted as A) (Table 1.1), an edge-list (Table 1.2), or visually as a graph (Figure 1.1). Table 1.1: Mathematical Representation of a Network: Adjacency Matrix. A C B D H F J I E G A 0 1 1 1 0 0 0 1 1 0 C 1 0 0 0 1 0 1 0 0 0 B 1 0 0 1 0 1 0 0 0 1 D 1 0 1 0 0 0 0 0 0 0 H 0 1 0 0 0 0 0 0 0 0 F 0 0 1 0 0 0 0 0 0 0 J 0 1 0 0 0 0 0 0 0 0 I 1 0 0 0 0 0 0 0 0 0 E 1 0 0 0 0 0 0 0 0 0 G 0 0 1 0 0 0 0 0 0 0 Links of a network can possess a direction (normally depicted by an arrow), which indicates that the interaction is asymmetric, e.g., one gene is regulating another gene, or a person follows somebody else in a social network. Networks with directed links are called directed networks, while networks without directed interactions or in which the direction is not known are referred to as undirected networks, e.g., collaboration in the same study or interactions between proteins. In NetMed - and in this workshop - we assume, most of the time, that networks do not possess a direction. The links can also have a weight to express the strength of the interaction, which results in a weighted network (Newman 2018; Albert-Láslzo Barabási 2016). Usually, the weight is graphically displayed as the thickness or the length of the links. Table 1.2: Mathematical Representation of a Network: Edge List. Source Target A D C H B F C J A I B D A B A E B G A C Networks can also have different dimensions. These dimensions can be understood as layers (or different link types) of the same system (Kurant and Thiran 2006; Kivela et al. 2014). For example, in a multi-omics multilayer system, each layer can be constructed using different -omics data (for example, genomics, transcriptomics, proteomics, etc.) where the ‘whole’ biological system can be understood as a network of networks (De Domenico 2017). The topology and the dynamic properties of the whole network can be changed by simply transforming the weights of the interactions, or by ignoring that nodes can interact in many ways (Mucha et al. 2010; Radicchi and Arenas 2013), also ignoring the node’s importance to the system. We will not deal with multilayer networks in this workshop. Figure 1.1: Visual Representation of a Network: Graph. 1.2.1 Network Terminology A network is a pair G = (N, L) of a set N of nodes connected by a set L of links. Two nodes are neighbors if they are connected. The degree (d) of a node is the number of nodes it interacts with (Bondy and Murty 2008). The weight is a measure of how strong a particular interaction is (Bondy and Murty 2008). The strength of a node is the sum of the weights attached to links belonging to a node (Barrat et al. 2003). The direction of a link specifies the source (starting point) and a target (endpoint) where the interaction occurs (Albert-Láslzo Barabási 2016). Hubs are nodes with a much larger degree compared to the average degree value (Barrat et al. 2003). A set of highly interconnected nodes is a module or cluster (A. Li and Horvath 2009). Two nodes are connected in a network, if a sequence of adjacent nodes, a path, connects them (Albert László Barabási and Oltvai 2004). The shortest path length is the number of links along the shortest path connecting two nodes (Albert László Barabási and Oltvai 2004). The average path length is the average of the shortest paths between all pairs of nodes (Albert László Barabási and Oltvai 2004). The diameter is the maximum distance between two nodes (Bondy and Murty 2008). The modularity index is a measure of the strength of the network division into modules when this measure is maximized; it can be used for identifying nodes’ communities (Newman 2018). Preferential attachment is the tendency of nodes to form new links preferentially to nodes with a high number of links (Albert László Barabási and Albert 1999; Vázquez 2003). The probability that a random node in the network has a particular degree is given by the degree distribution (Albert László Barabási and Oltvai 2004). A bipartide graph is a network in which the nodes can be divided into two disjoint sets of nodes such that links connect nodes from the two sets to each other, but never inside the same set (Albert-Láslzo Barabási 2016). In those networks, most of the network measures are calculated differently than in a unipartide network. The clustering coefficient describes the degree with which a node is connected to all its neighbors (Albert László Barabási and Oltvai 2004). The global clustering coefficient measures the total number of triangles in a network (Albert-Láslzo Barabási 2016). The average clustering coefficient is the average of the clustering coefficient of all nodes in a network (Albert László Barabási and Oltvai 2004). Centrality is a set of measures that have been proposed to help to define the most central nodes. It has many interpretations for autonomy, control, risk, exposure, influence, and power (Borgatti and Everett 2006). Closeness centrality is defined as the average distance from a single vertex to all other vertices(Newman 2018). Betweenness centrality is defined as the total number of shortest paths between pairs of nodes that pass through a particular node (Newman 2018). Global measures are measures that describe the whole network, for example, degree distribution; average clustering coefficient; path length; modularity index. Local measures are characteristics of individual nodes of a network, such as their degree and centrality. 1.2.2 Biological Terminology DNA is the hereditary material of most organisms – usually, all cells of an organism have the same DNA (Slack 2013). Genes are the basic physical and functional units of heredity. They are parts of the DNA and contain the information for producing functional RNAs and proteins. (Slack 2013). Proteins are large, complex molecules that play many critical roles in the body. The proteins are responsible for most of the work in cells and are necessary for structure, function, and regulation of the cells. They can act as enzymes, antibodies, transporters, transcription factors etc. (Slack 2013). The RNA is synthesized from the DNA but has different properties and functions than the DNA. Some RNAs carry out biological functions in a cell, while others, messenger RNA (mRNA), are turned into proteins that fulfill biological functions (Slack 2013). A non-coding RNA (ncRNA) is an RNA that does not encode a protein. NcRNAs often play a role in gene regulation (Mattick and Makunin 2006). microRNAs (miRNA) are examples of ncRNA; they are involved in posttranscriptional regulation of protein expression (Tanase, Ogrezeanu, and Badiu 2012). Gene expression is, in short, the coupled process of transcription (from DNA to RNA) and translation (from RNA to proteins) to transform the stored information inside the DNA into proteins (Slack 2013). RNA-Seq is a technique used to sequence the RNAs in a sample. The result is the snapshot abundance of all RNAs expressed in the sample at a particular time, often called the transcriptome (Metzker 2010). Microarrays, or gene chips, are chips with thousands of tiny spots containing a known DNA sequence. It is used to measure the abundance of mRNAs by eminence of fluorescence (Slack 2013). Transcription Factors are DNA binding proteins that activate or repress the transcription of particular target genes (Latchman 1997). Gene Regulatory Factors are responsible for controlling the expression of genomic information and include transcription factors, co-factors, epigenetic modifiers, miRNAs, and others (Hobert 2008). Systems Biology examines the structures and dynamics of cellular and organismal function, instead of isolated characteristics of a cell or organism. Drug repositioning (or drug repurposing) is the process of redeveloping a compound for use in a different disease. Yeast-Two-Hybrid (Y2H) systems is a system to measure protein-protein interaction. Two proteins to be tested for interaction are expressed in yeast; one protein is fused to a DNA-binding domain from a transcription factor while another protein (Y) is fused to a transcription activation domain. If X and Y interact, there will be a formation of a colony on media used as evidence of the interaction of X and Y (Parrish, Gulyas, and Finley 2006). Protein complex immunoprecipitation is an alternative method for measuring protein interactions. It involves immunoprecipitation of the protein bait, purification of the complex, and the identification of the interacting partners. High-throughput Mass Spectrometry has the ability to detect a characteristic mass to charge ratio of different substances in a sample. It is used to identify the proteins present in a sample (Kempa et al. 2019). Chromatin immunoprecipitation followed by sequencing (ChIP–Seq) can be used to identify binding sites of transcription factors in the DNA or of histone modification in a genome-wide manner (Park 2009). Chromatin Isolation by RNA Purification followed by sequencing (ChIRP-seq) maps lncRNA interactions to the chromatin (Park 2009). Genome-wide association studies (GWAS) are studies where millions of SNPs are tested for association with a particular phenotype using hundreds or thousands of individuals. Those studies shed light on the genetic basis of complex traits. Omics is a term that refers to the study of different areas in biology, and indicates the totality of some kind, e.g., genome, transcriptome, proteome, etc. "],["data-commonly-used-in-network-medicine.html", "Chapter 2 Data Commonly Used in Network Medicine 2.1 Protein-Protein Interaction Networks 2.2 Gene Disease Association 2.3 Drug-Targets", " Chapter 2 Data Commonly Used in Network Medicine In NetMed, we are often interested in understanding how genes associated to a particular disease can influence each other, how two diseases are similar (or different), and how a drug can be used in different set-ups. For that, it is necessary to use data sets that are able to represent those associations: Protein-Protein Interactions are used as a map of the interactions inside our cells (Session 2.1); Gene-Disease-Associations are used for us to identify genes that were previously associated to diseases, often using a GWAS approach (Session 2.2); and Drug-Target interactions, often measured by identifying physical binding of a therapeutic compound (often a drug) and a protein (Session 2.3). 2.1 Protein-Protein Interaction Networks In PPI networks, the nodes represent proteins, and they are connected by a link if they physically interact with each other (Rual et al. 2005). Typically, these interactions are measured experimentally, for instance, with the Yeast-Two-Hybrid (Y2H) system (Uetz et al. 2000), or by protein complex immunoprecipitation followed by high-throughput Mass Spectrometry (Zhang et al. 2008; Koh et al. 2012), or inferred computationally based on sequence similarity (Fong, Keating, and Singh 2004). PPI can be used to infer gene functions and the association of sub-networks to diseases (Menche et al. 2015). In this type of network, a highly connected protein tends to interact with proteins that are less connected, probably to prevent unwanted cross-talk of functional modules. As mentioned, most of the methods in network medicine are based on PPI. 2.1.1 Measuring PPIs Protein-Protein Interactions can be measured mainly using three different techniques: By the creation of Protein-Protein interaction maps derived from existing scientific literature; Using computational predictions of PPIs based on available orthogonal information; and By systematic experimental mapping of proteins identify complex association and/or binary interactions. We will focus here only on the third. Co-complex associations interrogate a protein composition of a protein complex in one (or several) cell lines. The most common approach uses affinity purification to extract the proteins that associate with the bait proteins, followed by mass spectometry in order to identify proteins that associate with the bait. This approach is often used for simple organisms, however, similar approaches have been reported for humans. Unfortunately, achieving stable expression of bait proteins is challenging. Co-complex map associations are composed by indirect and some direct binary associations. However, raw association data cannot distinguish the indirect from the direct association, and therefore, co-complex datasets have to be filtered and need to have incorporated prior knowledge that might lead to bias towards super-start genes. On the other side, for experimental determination of binary interactions between proteins, all possible pairs of proteins are systematically tested to generate a data set of all possible biophysical interactions. Because the human genome is composed by ~20,000 unique genes - not even considering its isophorms - we would have ~200 million possible combinations in order to robust systematically identify interactions, Yeast-to-Hybrid (Y2H) technology is the only one that can meet this requirement. This technology is able to interrogate hundreds of millions of human protein pairs for binary interactions. In short, the method works as follows: Protein of interest X and a DNA binding domain (DBD-X) fuse to form bait. The fusion of transcriptional activation domain (AD-Y) and a cDNA library Y results in prey. Those two form the basis of the protein–protein interaction detection system. Without bait–prey interaction, the activation domain is unable to restrict the gene-to-gene expression drive. 2.1.2 Commonly used data sources for PPIs PPIs can be found from different sources. I list here some well-known databases for that. Binary PPIs derived from high-throughput yeast-two hybrid (Y2H) experiments: HI-Union (Luck et al. 2020). Binary PPIs three-dimensional (3D) protein structures: Interactome3D (Mosca, Céol, and Aloy 2013); Instruct (Meyer et al. 2013); Insider (Meyer et al. 2018). Binary PPIs literature curation: PINA (Cowley et al. 2012); MINT (Licata et al. 2012); LitBM17 (Luck et al. 2020); Interactome3D; Instruct; Insider; BioGrid (Chatr-Aryamontri et al. 2017); HINT (Das and Yu 2012); HIPPIE (Alanis-Lobato, Andrade-Navarro, and Schaefer 2017); APID (Alonso-López et al. 2019); InWeb (T. Li et al. 2016). PPIs identified by affinity purification followed by mass spectrometry: BioPlex (Huttlin et al. 2017); QUBIC (Hein et al. 2015); CoFrac (Wan et al. 2015); HINT; HIPPIE; APID; LitBM17; InWeb. Kinase substrate interactions: KinomeNetworkX (Cheng et al. 2014); PhosphoSitePlus (Hornbeck et al. 2015). Signaling interactions: SignaLink (Fazekas et al. 2013); InnateDB (Breuer et al. 2013). Regulatory interactions: ENCODE consortium. 2.1.3 Understanding a PPI For this workshop, we will be using for this workshop is a combination of a manually curated PPI that combines all previous data sets. The data can be found here. This PPI was previously published in D. M. Gysi et al. (2020). Before we can start any analysis using this interactome, let us first understand this data. The PPI contains the EntrezID and the HGNC symbol of each gene, and some might not have a proper map. Therefore, it should be removed from further analysis. Moreover, we might have loops, and those should also be removed. Let us begin by preparing our environment and calling all libraries we will need at this point. require(data.table) require(tidyr) require(igraph) require(dplyr) require(magrittr) require(ggplot2) Let’s read in our data. PPI = fread(&quot;./data/PPI_Symbol_Entrez.csv&quot;) head(PPI) GeneA_ID GeneB_ID Symbol_A Symbol_B 9796 56992 PHYHIP KIF15 7918 9240 GPANK1 PNMA1 8233 23548 ZRSR2 TTC33 4899 11253 NRF1 MAN1B1 5297 8601 PI4KA RGS20 6564 8933 SLC15A1 RTL8C Let’s transform our edge-list into a network. gPPI = PPI %&gt;% select(starts_with(&quot;Symbol&quot;)) %&gt;% filter(Symbol_A != &quot;&quot;) %&gt;% filter(Symbol_B != &quot;&quot;) %&gt;% graph_from_data_frame(., directed = F) %&gt;% simplify() gPPI ## IGRAPH bf2776d UN-- 18507 322289 -- ## + attr: name (v/c) ## + edges from bf2776d (vertex names): ## [1] PHYHIP--TTR PHYHIP--NFE2 PHYHIP--DYRK1A PHYHIP--HNRNPA1 ## [5] PHYHIP--COPS6 PHYHIP--SUPT5H PHYHIP--SMARCC2 PHYHIP--EEF1A1 ## [9] PHYHIP--TRIP6 PHYHIP--NDUFV3 PHYHIP--CA10 PHYHIP--ERG28 ## [13] PHYHIP--S100A13 PHYHIP--PPIE PHYHIP--LIMD1 PHYHIP--ANKRD12 ## [17] PHYHIP--ZZEF1 PHYHIP--PRMT5 PHYHIP--KIF15 PHYHIP--MED8 ## [21] PHYHIP--PRKD2 PHYHIP--PAQR5 PHYHIP--MAGED4B PHYHIP--NDRG1 ## [25] PHYHIP--PTRH2 PHYHIP--HDAC11 PHYHIP--METTL18 PHYHIP--PNPLA2 ## [29] PHYHIP--TMEM255B PHYHIP--WDR89 PHYHIP--FAM131A GPANK1--TAF1 ## + ... omitted several edges How many genes do we have? How many interactions? Next, let’s check the degree distribution: dd = degree(gPPI) %&gt;% table() %&gt;% as.data.frame() names(dd) = c(&#39;Degree&#39;, &quot;Nodes&quot;) dd$Degree %&lt;&gt;% as.character %&gt;% as.numeric() dd$Nodes %&lt;&gt;% as.character %&gt;% as.numeric() ggplot(dd) + aes(x = Degree, y = Nodes) + geom_point(colour = &quot;#1d3557&quot;) + scale_x_continuous(trans = &quot;log10&quot;) + scale_y_continuous(trans = &quot;log10&quot;) + theme_minimal() ## Warning: Transformation introduced infinite values in continuous x-axis Figure 2.1: PPI Degree Distribution. Most of the proteins have few connections, and very few proteins have lots of connections. Who’s that protein? degree(gPPI) %&gt;% as.data.frame() %&gt;% arrange(desc(.)) %&gt;% filter(. &gt; 1000) ## . ## UBC 5199 ## ETS1 1496 ## GATA2 1369 ## CTCF 1361 ## EP300 1124 ## MYC 1107 ## AR 1099 2.1.4 Exercises Now is your turn. Spend some minutes understanding the data and getting some familiarity with it. What are the top 10 genes with the highest degree? Are those genes connected? 2.2 Gene Disease Association A Gene-Disease-Association (GDA) database are typically used to understand the association of genes to diseases, and model the underlying mechanisms of complex diseases. Those associations often come from GWAS studies and knock-out studies. 2.2.1 Commonly used data sources for GDAs As PPIs, GDAs can be found from different sources and with different evidences for each Gene-Disease association. I list here some well-known databases for that. CTD – Curated scientific literature (Davis et al. 2020) OMIM – Curated scientific literature (McKusick 2007) DisGeNet – Based on OMIM, ClinVar, and other data bases (Piñero et al. 2019) Orphanet – Validated - and non-validated - GDAs ClinGen – Validated - and non-validated - GDAs (Rehm et al. 2015) ClinVar – Different levels of evidence (Landrum et al. 2019) GWAS catalogue – GWAS associations to diseases (Buniello et al. 2018) PheGenI – GWAS associations to diseases (Ramos et al. 2013) lncRNADisease – Experimentally validated lncRNAs in diseases (Chen et al. 2012) HMDD – Experimentally validated miRNAs in diseases (Huang et al. 2018) 2.2.2 Understanding a GDA dataset We will use in this workshop Gene-Disease-Association from DisGeNet. It can be found here. Similar to the PPI, let us first get some familiarity with the data, before performing any analysis. Let’s read in the data and, again, do some basic statistics. GDA = fread(file = &#39;data/curated_gene_disease_associations.tsv&#39;, sep = &#39;\\t&#39;) head(GDA) geneId geneSymbol DSI DPI diseaseId diseaseName diseaseType diseaseClass diseaseSemanticType score EI YearInitial YearFinal NofPmids NofSnps source 1 A1BG 0.700 0.538 C0019209 Hepatomegaly phenotype C23;C06 Finding 0.30 1.000 2017 2017 1 0 CTD_human 1 A1BG 0.700 0.538 C0036341 Schizophrenia disease F03 Mental or Behavioral Dysfunction 0.30 1.000 2015 2015 1 0 CTD_human 2 A2M 0.529 0.769 C0002395 Alzheimer’s Disease disease C10;F03 Disease or Syndrome 0.50 0.769 1998 2018 3 0 CTD_human 2 A2M 0.529 0.769 C0007102 Malignant tumor of colon disease C06;C04 Neoplastic Process 0.31 1.000 2004 2019 1 0 CTD_human 2 A2M 0.529 0.769 C0009375 Colonic Neoplasms group C06;C04 Neoplastic Process 0.30 1.000 2004 2004 1 0 CTD_human 2 A2M 0.529 0.769 C0011265 Presenile dementia disease C10;F03 Mental or Behavioral Dysfunction 0.30 1.000 1998 2004 3 0 CTD_human The first thing to notice is the inconsistency with the disease names, in order to be able to work with it, let’s first put every disease to lower-case. Cleaned_GDA = GDA %&gt;% filter(diseaseType == &#39;disease&#39;) %&gt;% mutate(diseaseName = tolower(diseaseName)) %&gt;% select(geneSymbol, diseaseName, diseaseSemanticType) %&gt;% unique() dim(Cleaned_GDA) ## [1] 60478 3 dim(GDA) ## [1] 84038 16 numGenes = Cleaned_GDA %&gt;% group_by(diseaseName) %&gt;% summarise(numGenes = n()) %&gt;% ungroup() %&gt;% group_by(numGenes) %&gt;% summarise(numDiseases = n()) Let’s also understand the degree distribution of the diseases. ggplot(numGenes) + aes(x = numGenes, y = numDiseases) + geom_point(colour = &quot;#1d3557&quot;) + scale_x_continuous(trans = &quot;log10&quot;) + scale_y_continuous(trans = &quot;log10&quot;) + labs(x = &quot;Genes&quot;, y = &quot;Diseases&quot;)+ theme_minimal() Figure 2.2: Gene-Disease degree distribution. Because we want to focus in well studied diseases, and also that are known to be complex diseases, let’s filter for diseases with at least 10 genes. Cleaned_GDA %&lt;&gt;% group_by(diseaseName) %&gt;% mutate(numGenes = n()) %&gt;% filter(numGenes &gt; 10) Cleaned_GDA$diseaseName %&gt;% unique() %&gt;% length() ## [1] 920 2.2.3 Exercises Now is your turn. Spend some minutes understanding the data and getting some familiarity with it. What are the top 10 genes mostly involved with diseases? What are those diseases? What are the top 10 highly polygenic diseases? What are the top 10 highly polygenic disease classes? 2.3 Drug-Targets A druggable target is a protein, peptide, or nucleic acid that has an activity which can be modulated by a drug. A drug can be any small molecular weight chemical compound (SMOL) or a biologic (BIOL), such as an antibody or a recombinant protein that can treat a disease or a symptom. 2.3.1 Properties of an ideal drug target: A drug-target has a couple of proprieties that are highly desired when constructing the drug (Gashaw et al. 2011): Target is disease-modifying and/or has a proven function in the pathophysiology of a disease. Modulation of the target is less important under physiological conditions or in other diseases. If the druggability is not obvious (e.g., as for kinases), a 3D-structure for the target protein or a close homolog should be available for a druggability assessment. Target has a favorable ‘assayability’ enabling high throughput screening. Target expression is not uniformly distributed throughout the body. A target/disease-specific biomarker exists to monitor therapeutic efficacy. Favorable prediction of potential side effects according to phenotype data (e.g., in k.o. mice or genetic mutation databases). Target has a favorable IP situation (no competitors on target, freedom to operate). 2.3.2 Commonly used data sources for GDAs There are a couple of really good data sets that report drug-target interactions, I list here three good examples: DrugBank (Wishart et al. 2006; Wishart et al. 2017) CTD (Davis et al. 2020) Broad Institute Drug Repositioning Hub (Corsello et al. 2017) 2.3.3 Understanding a Drug-Target dataset For this workshop, we will use the drug bank drug-target dataset, and it can be found here. This dataset is from Drug-Bank, and has been previously parsed for your convenience. The original file is an XML file, and needs to be carefully handled to get information needed. Similar to the PPI and the GDA, let us understand a little bit of the data set, and what kind of information we have here. DT = fread(file = &#39;data/DB_DrugTargets_1201.csv&#39;) head(DT) i ID Name Started_commer Ended_commer ATC State Approved Gene_Target DB_id name organism Type known_action 1 DB00001 Lepirudin 1997-03-13 2012-07-27 B01AE liquid approved F2 BE0000048 Prothrombin Humans Polypeptide yes 2 DB00002 Cetuximab 2004-06-29 NA L01XC liquid approved EGFR BE0002098 Low affinity immunoglobulin gamma Fc region receptor II-a Humans Polypeptide unknown 2 DB00002 Cetuximab 2004-06-29 NA L01XC liquid approved FCGR3B BE0002098 Low affinity immunoglobulin gamma Fc region receptor II-a Humans Polypeptide unknown 2 DB00002 Cetuximab 2004-06-29 NA L01XC liquid approved C1QA BE0002098 Low affinity immunoglobulin gamma Fc region receptor II-a Humans Polypeptide unknown 2 DB00002 Cetuximab 2004-06-29 NA L01XC liquid approved C1QB BE0002098 Low affinity immunoglobulin gamma Fc region receptor II-a Humans Polypeptide unknown 2 DB00002 Cetuximab 2004-06-29 NA L01XC liquid approved C1QC BE0002098 Low affinity immunoglobulin gamma Fc region receptor II-a Humans Polypeptide unknown Cleaned_DT = DT %&gt;% filter(organism == &#39;Humans&#39;) %&gt;% select(Gene_Target, Name,ID, Type, known_action) %&gt;% unique() dim(Cleaned_DT) ## [1] 22931 5 dim(DT) ## [1] 26817 16 head(Cleaned_DT) ## Gene_Target Name ID Type known_action ## 1: F2 Lepirudin DB00001 Polypeptide yes ## 2: EGFR Cetuximab DB00002 Polypeptide unknown ## 3: FCGR3B Cetuximab DB00002 Polypeptide unknown ## 4: C1QA Cetuximab DB00002 Polypeptide unknown ## 5: C1QB Cetuximab DB00002 Polypeptide unknown ## 6: C1QC Cetuximab DB00002 Polypeptide unknown TargetDist = Cleaned_DT %&gt;% group_by(Gene_Target) %&gt;% summarise(numDrugs = n()) DrugDist = Cleaned_DT %&gt;% group_by(ID) %&gt;% summarise(numTargets = n()) ggplot(TargetDist) + aes(x = numDrugs) + geom_histogram(colour = &quot;#1d3557&quot;, fill = &quot;#a8dadc&quot; ) + labs(x = &quot;Targets&quot;, y = &quot;Drugs&quot;)+ theme_minimal() Figure 2.3: Target distribution Which Target is the most targetted gene? TargetDist %&gt;% arrange(desc(numDrugs)) %&gt;% filter(numDrugs &gt; 400) ## # A tibble: 2 x 2 ## Gene_Target numDrugs ## &lt;chr&gt; &lt;int&gt; ## 1 CYP3A4 966 ## 2 ABCB1 524 ggplot(DrugDist) + aes(x = numTargets) + geom_histogram(colour = &quot;#1d3557&quot;, fill = &quot;#a8dadc&quot; ) + labs(y = &quot;Targets&quot;, x = &quot;Drugs&quot;)+ theme_minimal() Figure 2.4: Drug distribution 2.3.4 Exercises Let us understand a little bit more about the data. What are the top 10 genes mostly targeted by drugs? Are they types are they mostly? What are the top 10 most promiscuous drugs? What are their indication? "],["methods.html", "Chapter 3 Methods for Disease Module Identification and Disease Similarity 3.1 Disease Module 3.2 Gene Overlap 3.3 Disease Separation 3.4 Exercises", " Chapter 3 Methods for Disease Module Identification and Disease Similarity In this chapter, I will introduce the main methods used in Network Medicine. We will start by understanding what a Disease Module is (Session 3.1), how we can calculate its significance, and also understand its importance. Next, we will explore the disease separation (Session 3.3), how to calculate, and make interpretations. 3.1 Disease Module In biological networks, genes are often involved in the same topological communities are also associated with similar biological processes (Ahn, Bagrow, and Lehmann 2010). It also reflects on how diseases localized themselves in the interaction; meaning that, disease modules are highly localized in specific network neighborhoods (Menche et al. 2015) (Figure 3.1). 3.1.1 Largest connected component The size of the largest connected component (LCC) is the number of nodes that form a connected subgraph (in our case, it is the number of proteins that are interconnected in the PPI). Many properties of this quantity allow us to understand how a particular disease interacts with the interactome. It is important to note here that this measure is highly dependent on the completeness of an interactome. If a link between a protein and its counterparts is unknown – therefore missing – we might say that that particular node is not involved in a disease module (or that the LCC is not significant). Figure 3.1: Disease-Module. In a schematic of a PPI, in pink, we see genes associated with a disease, forming a connected component of size 4. However, just computing this number might not be informative, and it is expected a randomness. To calculate this randomness, we often calculate the significance of the LCC by selecting proteins in the interactome with similar degrees (aka degree preserving randomization). To calculate the significance of the LCC, one can calculate its Z-Score or simply calculate the empirical probability under the curve from the empirical distribution. The Z-score is given by: \\[ Z-Score_{LCC} = \\frac{LCC - \\mu_{LCC}}{\\sigma_{LCC}}. \\] 3.1.2 Example in real data Our first task now is to understand if some diseases, from our Cleaned_GDA are able to form a Disease-Module. Let’s start doing it for Schizophrenia and later we will add some more diseases. The idea now is: Gather the genes associated to our disease in the data, find them in the PPI, check if they form a connected component, check the significance of the component and visualize the Disease-Module. # First, let&#39;s attach all packages we will need. require(NetSci) require(magrittr) require(dplyr) require(igraph) #First, let&#39;s select genes that are associated with Schizophrenia. SCZ_Genes = Cleaned_GDA %&gt;% filter(diseaseName %in% &#39;schizophrenia&#39;) %&gt;% pull(geneSymbol) %&gt;% unique() # Next, let&#39;s see how they are localized in the PPI. # Fist, we have to make sure all genes are in the PPI. # Later, we calculate the LCC. # And lastly, let&#39;s visualize it. SCZ_PPI = SCZ_Genes[SCZ_Genes %in% V(gPPI)$name] gScz = gPPI %&gt;% induced.subgraph(., SCZ_PPI) components(gScz) components(gScz)$csize %&gt;% max ## [1] 683 # The size of the LCC is 683. But... How does it compare to a random selection genes? LCC_scz = LCC_Significance(N = 1000, Targets = SCZ_PPI, G = gPPI) Histogram_LCC(LCC_scz) gScz ## IGRAPH ac014bc UN-- 846 2564 -- ## + attr: name (v/c) ## + edges from ac014bc (vertex names): ## [1] PI4KA --SP1 F2 --SP1 DNM1 --CTCF GSK3B --HSPA1A ## [5] DNM1 --GRB2 SP1 --GRB2 MET --GRB2 GSK3B --MAPK14 ## [9] SP1 --MAPK14 CTCF --MAPK14 GRB2 --MAPK14 MET --ACTB ## [13] GRB2 --ACTB MAPK14 --ACTB GSK3B --SOX10 SP1 --SOX10 ## [17] PAX6 --SOX10 SP1 --CCNA2 ACTB --MTNR1A ACTB --GSN ## [21] PI4KA --JUN GSK3B --JUN SMARCA2--JUN SP1 --JUN ## [25] MAPK14 --JUN SOX10 --JUN GSK3B --ESR1 SMARCA2--ESR1 ## [29] SP1 --ESR1 HSPA1A --ESR1 FMR1 --ESR1 MAPK14 --ESR1 ## + ... omitted several edges V(gScz)$size = degree(gScz) %&gt;% CoDiNA::normalize() V(gScz)$size = (V(gScz)$size + 0.1)*5 V(gScz)$color = &#39;#83c5be&#39; V(gScz)$frame.color = &#39;#006d77&#39; V(gScz)$label = ifelse(V(gScz)$size &gt; 4, V(gScz)$name, NA ) V(gScz)$label.color = &#39;#e29578&#39; E(gScz)$width = edge.betweenness(gScz, directed = F) %&gt;% CoDiNA::normalize() E(gScz)$width = E(gScz)$width + 0.01 E(gScz)$weight = E(gScz)$width par(mar = c(0,0,0,0)) plot(gScz) gScz %&lt;&gt;% delete.vertices(., degree(.) == 0) V(gScz)$size = degree(gScz) %&gt;% CoDiNA::normalize() V(gScz)$size = (V(gScz)$size + 0.1)*5 V(gScz)$color = &#39;#83c5be&#39; V(gScz)$frame.color = &#39;#006d77&#39; V(gScz)$label = ifelse(V(gScz)$size &gt; 4, V(gScz)$name, NA ) V(gScz)$label.color = &#39;#e29578&#39; E(gScz)$width = edge.betweenness(gScz, directed = F) %&gt;% CoDiNA::normalize() E(gScz)$width = E(gScz)$width + 0.01 E(gScz)$weight = E(gScz)$width par(mar = c(0,0,0,0)) plot(gScz) 3.1.3 Exercises Calculate the LCC, and visualize the modules for the following diseases: Autistic Disorder; Obesity; Hyperlipidemia; Rheumatoid Arthritis. Choose any disease of your interest and do the same thing. 3.2 Gene Overlap A first intuitive way to measure the overlap of two gene sets is by calculating its overlap, or its normalized overlap, the Jaccard Index. The Jaccard index is calculated by taking the ratio of Intersection of two sets over the Union of those sets. The Jaccard coefficient measures similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets: \\[ J(A,B) = \\frac{|A \\cap B|}{|A \\cup B|} = \\frac{|A \\cap B|}{|A| + |B| - |A \\cap B|}. \\] Note that by design, \\(0 \\leq J(A,B) \\leq 1\\). If A and B are both empty, define \\(J(A,B) = 1\\). Let’s calculate the Jaccard Index for the five diseases we calculated its LCCs. Dis_Ex1 = c(&#39;schizophrenia&#39;, &quot;autistic disorder&quot;, &#39;obesity&#39;, &#39;hyperlipidemia&#39;, &#39;rheumatoid arthritis&#39;) GDA_Interest = Cleaned_GDA %&gt;% filter(diseaseName %in% Dis_Ex1) %&gt;% select(diseaseName, geneSymbol) %&gt;% unique() Jaccard_Ex2 = Jaccard(GDA_Interest) ## | | | 0% | |============== | 20% | |============================ | 40% | |========================================== | 60% | |======================================================== | 80% | |======================================================================| 100% Jaccard_Ex2 ## Node.1 Node.2 Jaccard.Index ## 1: schizophrenia autistic disorder 0.095785441 ## 2: schizophrenia obesity 0.039159503 ## 3: autistic disorder obesity 0.033259424 ## 4: schizophrenia rheumatoid arthritis 0.027210884 ## 5: autistic disorder rheumatoid arthritis 0.035714286 ## 6: obesity rheumatoid arthritis 0.029891304 ## 7: schizophrenia hyperlipidemia 0.005586592 ## 8: autistic disorder hyperlipidemia 0.007246377 ## 9: obesity hyperlipidemia 0.052132701 ## 10: rheumatoid arthritis hyperlipidemia 0.000000000 # Let&#39;s visualize the Venn diagram (Euler Diagram) of those overlaps. require(eulerr) ## Loading required package: eulerr Euler_List = list ( SCZ = GDA_Interest$geneSymbol[GDA_Interest$diseaseName == &#39;schizophrenia&#39;], ASD = GDA_Interest$geneSymbol[GDA_Interest$diseaseName == &#39;autistic disorder&#39;], OB = GDA_Interest$geneSymbol[GDA_Interest$diseaseName == &#39;obesity&#39;], HD = GDA_Interest$geneSymbol[GDA_Interest$diseaseName == &#39;hyperlipidemia&#39;], RA = GDA_Interest$geneSymbol[GDA_Interest$diseaseName == &#39;rheumatoid arthritis&#39;]) EULER = euler(Euler_List) plot(EULER, quantities = TRUE) 3.3 Disease Separation When looking into the Jaccard Index, we have a sense of how similar two diseases are based on genes that are known to be associated with both diseases. The main problem with this is that we assume that all genes associated with a disease is known, and we do not take the topology of the underlying network into account. The separation is a complementary quantity that is a bit less sensitive to the incompleteness of the PPI, we can measure the distances \\(d_s\\) of each disease-associated node to all other disease associated nodes. Taking into account only the shortest distance between them results in a distribution \\(P(d_s)\\). The mean value \\(&lt;d_s&gt;\\) can be interpreted as the diameter of the disease model. Note the diameter here is the average distance instead of the maximal distance. The concept of network localization can be further generalized to examine the relationship between any different sets of nodes, for example, proteins associated with two different diseases. The network serves as a map, where diseases are represented by different neighborhoods. How close and the degree of overlap of two network neighborhoods can be found to be highly predictive of the pathological similarity of those diseases (Menche et al. 2015) (Figure 3.2). To quantify the distance of two sets of nodes A and B, we first compute the distribution \\(P(d_{AB})\\) of all shortest distances \\(d_{AB}\\) between nodes A and B and the respective mean distance \\(&lt;d_{AB}&gt;\\). The network based separation \\(S_{AB}\\) can be obtained by comparing the mean shortest distance within the respective node sets and the mean shortest distance between them. \\[ S_{AB} = &lt;d_{AB}&gt; - \\frac{&lt;d_{AA}&gt; + &lt;d_BB&gt;}{2}. \\] Note: negative \\(S_{AB}\\) indicates topological overlap of the two node sets, while a positive \\(S_{AB}\\) indicates a topological separation of the two node sets. The size of the overlap is highly predictive of pathological and functional similarity, elevated co-expression, symptoms similarity, and high comorbidity diseases. Figure 3.2: Disease-Separation. In a schematic PPI, we see genes associated with a disease A (in pink), and genes associated to disease B (in green). The separation of diseases A and B is given by: \\[ &lt;d_{AA}&gt; = 1.5 \\] \\[ &lt;d_{BB}&gt; = 1.5 \\] \\[ &lt;d_{AB}&gt; = 2.7 \\] \\[ S_{AB} = 2.7 - \\frac{1.5+ 1.5}2 = 1.2. \\] 3.3.1 Example in real data sab = separation(gPPI, GDA_Interest) ## | | | 0% | |============== | 20% | |============================ | 40% | |========================================== | 60% | |======================================================== | 80% | |======================================================================| 100% ## Calculating S_ab.. ## | | | 0% | |============== | 20% | |============================ | 40% | |========================================== | 60% | |======================================================== | 80% | |======================================================================| 100% ## Done.. Sep_ex2 = sab$Sab %&gt;% as.matrix() Sep_ex2[lower.tri(Sep_ex2)] = t(Sep_ex2)[lower.tri(Sep_ex2)] We can visualize the network separation of the diseases using a heatmap. Sep_ex2 %&gt;% heatmap(., symm = T) 3.4 Exercises If we go back to our PPI, can we identify that the modules are indeed close or separated? Plot the network for those diseases. Calculate the Jaccard Index and the Separation for the following diseases: Schizophrenia, Bipolar Disorder, Intellectual Disability, Depressive disorder, Autistic Disorder, Unipolar Depression, Mental Depression, Major Depressive Disorder, Mood Disorders, Cocaine Dependence, Cocaine Abuse, Cocaine-Related Disorders, Substance abuse problem, Drug abuse, Drug Dependence, Drug habituation, Drug Use Disorders, Substance-Related Disorders, Psychotic Disorders, Obesity, hyperlipidemia, Rheumatoid Arthritis, Prostatic Neoplasms, Mammary Neoplasms, Mammary Neoplasms, Human Malignant neoplasm of stomach, Stomach Neoplasms, Colorectal Neoplasms, Malignant neoplasm of lung, Lung Neoplasms, Malignant neoplasm of prostate. Optional: Try to make the network visualization for the heatmap of Sep_ex2. Use diseases as nodes, and their weight as links. Optional: Plot the PPI with genes selected in GDA_Interest, where each node is a piechart representing which diseases are associated with that particular gene. Tip: Check vertex.shape.pie for help. "],["method-for-drug-repurpusing.html", "Chapter 4 Method for drug-repurpusing 4.1 Proximity 4.2 Example in real data 4.3 Exercises", " Chapter 4 Method for drug-repurpusing In this Chapter, we will learn how to calculate the proximity of a drug to a disease - and infer drug repurpusing (Session 4.1)- based on network methodologies. There are different methods that are used for drug-repurpusing based on networks, such as the diffusion state distance (DSD) (Cao et al. 2013), that uses a graph diffusion property to derive a similarity metric for pairs of nodes, it takes into account how their similarly affect the rest of the network; and AI-based methods, where a heterogeneous graph \\(G = (V,R)\\) with N nodes \\(v_i \\in V\\) representing distinct types of biomedical entities and labeled edges representing semantically distinct types of edges between the entities (i.e., protein-protein interactions, drug-target associations, disease-protein associations, and drug-disease indications) and are tasked to predict drugs for a particular disease (Zitnik, Agrawal, and Leskovec 2018). Due to the limited time, we will focus only on the proximity-based method. For this, we will be using the R package NetSci and to make the appropriate visualizations we will use igraph. 4.1 Proximity Given G, the set of Disease-Genes, T, the set of drug targets, and d(g,t), the shortest path length between nodes \\(g \\in G\\) and \\(t \\in T\\) in the network, the proximity can be defined as (Guney et al. 2016): \\[ d(g,t) = \\frac{1}{|\\left|T\\right||}\\sum_{t\\in T}\\underset{v\\in V}\\min{d(g,t)}. \\] A visual representation of the method can be seen in Figure 4.1. The proximity for drug 2 to the disease is calculated by the average of the shortest path from its targets to the disease genes. The shortest path from N to D is 1, from F to D is 3, the average is 2. For Drug 1, we have: \\[d(Drug_1, disease) = \\frac{2 + 2 + 1}{3} = 1.66.\\] Figure 4.1: Drug-Target &amp; Disease-Module Proximity. Triangles represent Disease Associated Genes, while circles represent non-associated genes. In dark purple, we see the drugs and light purple, its targets. Similarly to the LCC (Session 3.1) it is important to calculate a measure of randomness associate to the proximity. In the same sense, it is important that the nodes being randomized, the nodes are not simply randomly selected from the pool of proteins in the PPI, but rather selected from matching degree proteins. To calculate the significance of the proximity one can calculate its Z-Score or simply calculate the empirical probability under the curve from the empirical distribution. Similarly, the Z-score is given by: \\[ Z-Score_{d(g,t)} = \\frac{d(g,t) - \\mu_{d(g,t)}}{\\sigma_{d(g,t)}}. \\] 4.2 Example in real data Let’s try it to identify drugs that could work for our disease sets. Let’s focus on hyperlipidemia and focus on five drugs at first. Asenapine; Phentermine; Simvastatin; Pizotifen; Eprotirome. hyperlipidemia_genes = Cleaned_GDA %&gt;% filter(diseaseName == &#39;hyperlipidemia&#39;) %&gt;% pull(geneSymbol) %&gt;% unique() Asenapine_t = DT %&gt;% filter(Name == &#39;Asenapine&#39;) %&gt;% pull(Gene_Target) Asenapine_t ## [1] &quot;HTR1A&quot; &quot;HTR1B&quot; &quot;HTR2A&quot; &quot;HTR2B&quot; &quot;HTR2C&quot; &quot;HTR5A&quot; &quot;HTR6&quot; &quot;HTR7&quot; ## [9] &quot;DRD2&quot; &quot;DRD3&quot; &quot;DRD4&quot; &quot;DRD1&quot; &quot;ADRA1A&quot; &quot;ADRA2A&quot; &quot;ADRA2B&quot; &quot;ADRA2C&quot; ## [17] &quot;HRH1&quot; &quot;HRH2&quot; &quot;ADRB1&quot; &quot;ADRB2&quot; &quot;UGT1A4&quot; &quot;CYP1A2&quot; &quot;CYP2D6&quot; &quot;CYP3A4&quot; ## [25] &quot;ALB&quot; &quot;ORM1&quot; proximity_average(gPPI, source = hyperlipidemia_genes, targets = Asenapine_t) ## [1] 1.961538 Let’s do it in a loop: drugs = c(&quot;Asenapine&quot;, &#39;Phentermine&#39;, &#39;Simvastatin&#39;, &#39;Pizotifen&#39;, &#39;Eprotirome&#39;) p = list() for(i in 1:length(drugs)){ d = drugs[i] Drug_targets = DT %&gt;% filter(Name %in% d) %&gt;% pull(Gene_Target) prox = proximity_average(gPPI, source = hyperlipidemia_genes, targets = Drug_targets) p[[i]] = data.frame(prox = prox, ntargets = length(Drug_targets), drug = d) } p %&lt;&gt;% bind_rows() Now, let’s do the same, but also calculating the significance of the proximity. Drug_Target = DT %&gt;% filter(Name %in% drugs) %&gt;% select(Name, Gene_Target) %&gt;% unique() names(Drug_Target) = c(&#39;ID&#39;, &quot;Target&quot; ) proximity_significance = avr_proximity_multiple_target_sets( set = drugs, G = gPPI, ST = Drug_Target, source = hyperlipidemia_genes, N = 1000, bins = 100, min_per_bin = 20 ) ## | | | 0% | |============== | 20% | |============================ | 40% | |========================================== | 60% | |======================================================== | 80% | |======================================================================| 100% Which are the drugs that we can use for hyperlipidemia? proximity_significance ## Drug targets targets_G proximity IC_97.5 IC_2.5 p_gt ## Asenapine Asenapine 26 26 1.961538 2.269231 1.923077 0.905 ## Phentermine Phentermine 7 7 2.000000 2.860714 2.000000 0.952 ## Simvastatin Simvastatin 20 19 2.157895 2.578947 2.103947 0.920 ## Pizotifen Pizotifen 17 17 2.058824 2.295588 1.880882 0.642 ## Eprotirome Eprotirome 2 2 1.500000 3.000000 1.000000 0.929 ## p_lt Z ## Asenapine 0.095 -1.5969867 ## Phentermine 0.048 -1.6491003 ## Simvastatin 0.080 -1.6865893 ## Pizotifen 0.358 -0.4609439 ## Eprotirome 0.071 -1.4765928 Now, let us check those drug indications: Indication = DT %&gt;% filter(Name %in% drugs) %&gt;% select(Name, Indication) %&gt;% unique() Indication ## Name ## 1: Phentermine ## 2: Simvastatin ## 3: Eprotirome ## 4: Pizotifen ## 5: Asenapine ## Indication ## 1: Phentermine is indicated, alone or in combination with topiramate, as a short-term adjunct, not pass a few weeks, in a regimen of weight reduction based on exercise, behavioral modifications and caloric restriction in the management of exogenous obesity for patients with an initial body mass index (BMI) greater than 30 kg/m2 or greater than 27 kg/m2 in presence of other risk factors such as controller hypertension, diabetes or hyperlipidemia.[FDA label]\\r\\n\\r\\nExogenous obesity is considered when the overweight is caused by consuming more food than the person activity level warrants. This condition commonly causes an increase in fat storage. It is an epidemic condition in the United States where over two-thirds of adults are overweight or obese and one in three Americans is obese. In the world, the incidence of obesity has nearly doubled.[A174391] ## 2: Simvastatin is indicated for the treatment of hyperlipidemia to reduce elevated total cholesterol (total-C), low-density lipoprotein cholesterol (LDL‑C), apolipoprotein B (Apo B), and triglycerides (TG), and to increase high-density lipoprotein cholesterol (HDL-C).[F4655, F4658]\\r\\n\\r\\nThis includes the treatment of primary hyperlipidemia (Fredrickson type IIa, heterozygous familial and nonfamilial), mixed dyslipidemia (Fredrickson type IIb), hypertriglyceridemia (Fredrickson type IV hyperlipidemia), primary dysbetalipoproteinemia (Fredrickson type III hyperlipidemia), homozygous familial hypercholesterolemia (HoFH) as an adjunct to other lipid-lowering treatments, as well as adolescent patients with Heterozygous Familial Hypercholesterolemia (HeFH).[F4655, F4658]\\r\\n\\r\\nSimvastatin is also indicated to reduce the risk of cardiovascular morbidity and mortality including myocardial infarction, stroke, and the need for revascularization procedures. It is primarily used in patients at high risk of coronary events because of existing coronary heart disease, diabetes, peripheral vessel disease, history of stroke or other cerebrovascular disease.[F4655, F4658]\\r\\n\\r\\nPrescribing of statin medications is considered standard practice following any cardiovascular events and for people with a moderate to high risk of development of CVD. Statin-indicated conditions include diabetes mellitus, clinical atherosclerosis (including myocardial infarction, acute coronary syndromes, stable angina, documented coronary artery disease, stroke, trans ischemic attack (TIA), documented carotid disease, peripheral artery disease, and claudication), abdominal aortic aneurysm, chronic kidney disease, and severely elevated LDL-C levels.[A181087, A181406] ## 3: Investigated for use/treatment in hyperlipidemia, metabolic disease, and obesity. ## 4: Indicated for the prophylactic management of migraines [L2292]. ## 5: Used for treatment in psychosis, schizophrenia and schizoaffective disorders, manic disorders, and bipolar disorders as monotherapy or in combination. 4.3 Exercises Test the same drugs for all the five other diseases we are interested. How do those values compare? Autistic Disorder; Obesity; Hyperlipidemia; Rheumatoid Arthritis. Choose one disease and visualize the disease module along with each of the drugs we tested. "],["summary.html", "Chapter 5 Summary", " Chapter 5 Summary In this course we learned how to identify disease modules, disease separation and how to repurpuse drugs using a network medicine approach. "],["references.html", "References", " References Ahn, Yong Yeol, James P. Bagrow, and Sune Lehmann. 2010. “Link communities reveal multiscale complexity in networks.” Nature. https://doi.org/10.1038/nature09182. Alanis-Lobato, Gregorio, Miguel A Andrade-Navarro, and Martin H Schaefer. 2017. “HIPPIE v2.0: enhancing meaningfulness and reliability of protein-protein interaction networks.” Nucleic Acids Research 45 (D1): D408–14. https://doi.org/10.1093/nar/gkw985. Alonso-López, DIego, Francisco J. Campos-Laborie, Miguel A. Gutiérrez, Luke Lambourne, Michael A. Calderwood, Marc Vidal, and Javier De Las Rivas. 2019. “APID database: Redefining protein-protein interaction experimental evidences and binary interactomes.” Database 2019 (i): 1–8. https://doi.org/10.1093/database/baz005. Barabási, Albert László, and Réka Albert. 1999. “Emergence of scaling in random networks.” Science 286 (5439): 509–12. https://doi.org/10.1126/science.286.5439.509. Barabási, Albert László, and Zoltán N. Oltvai. 2004. “Network biology: Understanding the cell’s functional organization.” Nature Reviews Genetics 5 (2): 101–13. https://doi.org/10.1038/nrg1272. Barabási, Albert-Láslzo. 2016. Network Science. 1st ed. Cambridge, UK: Cambridge University Press. Barrat, Alain, Marc Barthelemy, Romualdo Pastor-Satorras, and Alessandro Vespignani. 2003. “The architecture of complex weighted networks.” Proceedings of the National Academy of Sciences 101 (11): 3747–52. https://doi.org/10.1073/pnas.0400087101. Bondy, J. A., and U. S. R. Murty. 2008. Graph Theory. Springer. https://doi.org/10.1007/978-1-84638-970-5. Borgatti, Stephen P., and Martin G. Everett. 2006. “A Graph-theoretic perspective on centrality.” Social Networks 28 (4): 466–84. https://doi.org/10.1016/J.SOCNET.2005.11.005. Breuer, Karin, Amir K Foroushani, Matthew R Laird, Carol Chen, Anastasia Sribnaia, Raymond Lo, Geoffrey L Winsor, Robert E W Hancock, Fiona S L Brinkman, and David J Lynn. 2013. “InnateDB: systems biology of innate immunity and beyond–recent updates and continuing curation.” Nucleic Acids Research 41 (Database issue): D1228–33. https://doi.org/10.1093/nar/gks1147. Buniello, Annalisa, Jacqueline A L MacArthur, Maria Cerezo, Laura W Harris, James Hayhurst, Cinzia Malangone, Aoife McMahon, et al. 2018. “The NHGRI-EBI GWAS Catalog of Published Genome-Wide Association Studies, Targeted Arrays and Summary Statistics 2019.” Nucleic Acids Research 47 (D1): D1005–12. https://doi.org/10.1093/nar/gky1120. Cao, Mengfei, Hao Zhang, Jisoo Park, Noah M. Daniels, Mark E. Crovella, Lenore J. Cowen, and Benjamin Hescott. 2013. “Going the Distance for Protein Function Prediction: A New Distance Metric for Protein Interaction Networks.” PLoS ONE. https://doi.org/10.1371/journal.pone.0076339. Chatr-Aryamontri, Andrew, Rose Oughtred, Lorrie Boucher, Jennifer Rust, Christie Chang, Nadine K Kolas, Lara O’Donnell, et al. 2017. “The BioGRID interaction database: 2017 update.” Nucleic Acids Research 45 (D1): D369–79. https://doi.org/10.1093/nar/gkw1102. Chen, Geng, Ziyun Wang, Dongqing Wang, Chengxiang Qiu, Mingxi Liu, Xing Chen, Qipeng Zhang, Guiying Yan, and Qinghua Cui. 2012. “LncRNADisease: A Database for Long-Non-Coding RNA-Associated Diseases.” Nucleic Acids Research 41 (D1): D983–86. https://doi.org/10.1093/nar/gks1099. Cheng, Feixiong, Peilin Jia, Quan Wang, and Zhongming Zhao. 2014. “Quantitative Network Mapping of the Human Kinome Interactome Reveals New Clues for Rational Kinase Inhibitor Discovery and Individualized Cancer Therapy.” Oncotarget 5 (11): 3697–3710. https://doi.org/10.18632/oncotarget.1984. Corsello, Steven M, Joshua A Bittker, Zihan Liu, Joshua Gould, Patrick McCarren, Jodi E Hirschman, Stephen E Johnston, et al. 2017. “The Drug Repurposing Hub: A Next-Generation Drug Library and Information Resource.” Nature Medicine 23 (4): 405–8. https://doi.org/10.1038/nm.4306. Cowley, Mark J, Mark Pinese, Karin S Kassahn, Nic Waddell, John V Pearson, Sean M Grimmond, Andrew V Biankin, Sampsa Hautaniemi, and Jianmin Wu. 2012. “PINA v2.0: mining interactome modules.” Nucleic Acids Research 40 (Database issue): D862–5. https://doi.org/10.1093/nar/gkr967. Das, Jishnu, and Haiyuan Yu. 2012. “HINT: High-quality protein interactomes and their applications in understanding human disease.” BMC Systems Biology 6. https://doi.org/10.1186/1752-0509-6-92. Davis, Allan Peter, Cynthia J Grondin, Robin J Johnson, Daniela Sciaky, Jolene Wiegers, Thomas C Wiegers, and Carolyn J Mattingly. 2020. “Comparative Toxicogenomics Database (CTD): Update 2021.” Nucleic Acids Research 49 (D1): D1138–43. https://doi.org/10.1093/nar/gkaa891. De Domenico, Manlio. 2017. “Multilayer modeling and analysis of human brain networks.” GigaScience 6 (5). https://doi.org/10.1093/gigascience/gix004. Fazekas, Dávid, Mihály Koltai, Dénes Türei, Dezső Módos, Máté Pálfy, Zoltán Dúl, Lilian Zsákai, et al. 2013. “SignaLink 2 - a signaling pathway resource with multi-layered regulatory networks.” BMC Systems Biology 7 (January): 7. https://doi.org/10.1186/1752-0509-7-7. Fong, Jessica H, Amy E Keating, and Mona Singh. 2004. Genome Biology 5 (2): R11. https://doi.org/10.1186/gb-2004-5-2-r11. Gashaw, Isabella, Peter Ellinghaus, Anette Sommer, and Khusru Asadullah. 2011. “What makes a good drug target?” https://doi.org/10.1016/j.drudis.2011.09.007. Guney, Emre, Jörg Menche, Marc Vidal, and Albert-László László Barábasi. 2016. “Network-based in silico drug efficacy screening.” Nature Communications 7 (1): 10331. https://doi.org/10.1038/ncomms10331. Gysi, D M, Í Do Valle Zitnik, M., A Ameli, X Gan, O Varol, H Sanchez, R M Baron, D Ghiassian, J Loscalzo, and A L Barabási. 2020. “Network Medicine Framework for Identifying Drug Repurposing Opportunities for COVID-19.” ArXiv. Gysi, Deisy Morselli, and Katja Nowick. 2020. “Construction, comparison and evolution of networks in life sciences and other disciplines.” Journal of the Royal Society, Interface 17 (166): 20190610. https://doi.org/10.1098/rsif.2019.0610. Hein, Marco Y., Nina C. Hubner, Ina Poser, Jürgen Cox, Nagarjuna Nagaraj, Yusuke Toyoda, Igor A. Gak, et al. 2015. “A Human Interactome in Three Quantitative Dimensions Organized by Stoichiometries and Abundances.” Cell 163 (3): 712–23. https://doi.org/10.1016/j.cell.2015.09.053. Hobert, Oliver. 2008. “Gene regulation by transcription factors and MicroRNAs.” American Association for the Advancement of Science. https://doi.org/10.1126/science.1151651. Hornbeck, Peter V, Bin Zhang, Beth Murray, Jon M Kornhauser, Vaughan Latham, and Elzbieta Skrzypek. 2015. “PhosphoSitePlus, 2014: mutations, PTMs and recalibrations.” Nucleic Acids Research 43 (Database issue): D512–20. https://doi.org/10.1093/nar/gku1267. Huang, Zhou, Jiangcheng Shi, Yuanxu Gao, Chunmei Cui, Shan Zhang, Jianwei Li, Yuan Zhou, and Qinghua Cui. 2018. “HMDD V3.0: A Database for Experimentally Supported Human microRNAdisease Associations.” Nucleic Acids Research 47 (D1): D1013–17. https://doi.org/10.1093/nar/gky1010. Huttlin, Edward L., Raphael J. Bruckner, Joao A. Paulo, Joe R. Cannon, Lily Ting, Kurt Baltier, Greg Colby, et al. 2017. “Architecture of the human interactome defines protein communities and disease networks.” Nature 545 (7655): 505–9. https://doi.org/10.1038/nature22366. Kempa, Emily E., Katherine A. Hollywood, Clive A. Smith, and Perdita E. Barran. 2019. “High throughput screening of complex biological samples with mass spectrometry-from bulk measurements to single cell analysis.” Analyst 144 (3): 872–91. https://doi.org/10.1039/c8an01448e. Kivela, M., A. Arenas, M. Barthelemy, J. P. Gleeson, Y. Moreno, and M. A. Porter. 2014. “Multilayer networks.” Journal of Complex Networks 2 (3): 203–71. https://doi.org/10.1093/comnet/cnu016. Koh, Gavin C. K. W., Pablo Porras, Bruno Aranda, Henning Hermjakob, and Sandra E. Orchard. 2012. “Analyzing ProteinProtein Interaction Networks.” Journal of Proteome Research 11 (4): 2014–31. https://doi.org/10.1021/pr201211w. Kurant, Maciej, and Patrick Thiran. 2006. “Layered Complex Networks.” Physical Review Letters 96 (13): 138701. https://doi.org/10.1103/PhysRevLett.96.138701. Landrum, Melissa J, Shanmuga Chitipiralla, Garth R Brown, Chao Chen, Baoshan Gu, Jennifer Hart, Douglas Hoffman, et al. 2019. “ClinVar: Improvements to Accessing Data.” Nucleic Acids Research 48 (D1): D835–44. https://doi.org/10.1093/nar/gkz972. Latchman, D. S. 1997. “Transcription factors: An overview.” International Journal of Biochemistry and Cell Biology 29 (12): 1305–12. https://doi.org/10.1016/S1357-2725(97)00085-X. Li, Ai, and Steve Horvath. 2009. “Network module detection: Affinity search technique with the multi-node topological overlap measure.” BMC Research Notes 2 (1): 142. https://doi.org/10.1186/1756-0500-2-142. Li, Taibo, Rasmus Wernersson, Rasmus B Hansen, Heiko Horn, Johnathan Mercer, Greg Slodkowicz, Christopher T Workman, et al. 2016. “A Scored Human Proteinprotein Interaction Network to Catalyze Genomic Interpretation.” Nature Methods 14 (1): 61–64. https://doi.org/10.1038/nmeth.4083. Licata, Luana, Leonardo Briganti, Daniele Peluso, Livia Perfetto, Marta Iannuccelli, Eugenia Galeota, Francesca Sacco, et al. 2012. “MINT, the molecular interaction database: 2012 update.” Nucleic Acids Research 40 (D1): D857–61. https://doi.org/10.1093/nar/gkr930. Luck, Katja, Dae Kyum Kim, Luke Lambourne, Kerstin Spirohn, Bridget E. Begg, Wenting Bian, Ruth Brignall, et al. 2020. “A reference map of the human binary protein interactome.” Nature. https://doi.org/10.1038/s41586-020-2188-x. Mattick, John S, and Igor V Makunin. 2006. “Non-coding RNA.” Human Molecular Genetics 15 (suppl_1): R17–29. https://doi.org/10.1093/hmg/ddl046. McKusick, Victor A. 2007. “Mendelian Inheritance in Man and Its Online Version, OMIM.” The American Journal of Human Genetics 80 (4): 588–604. https://doi.org/10.1086/514346. Menche, Jörg, Amitabh Sharma, Maksim Kitsak, Susan Dina Ghiassian, Marc Vidal, Joseph Loscalzo, and Albert-Laszlo Barabasi. 2015. “Uncovering disease-disease relationships through the incomplete interactome.” Science 347 (6224). https://doi.org/10.1126/science.1065103. Metzker, Michael L. 2010. “Sequencing technologies the next generation.” Nature Publishing Group. https://doi.org/10.1038/nrg2626. Meyer, Michael J, Juan Felipe Beltrán, Siqi Liang, Robert Fragoza, Aaron Rumack, Jin Liang, Xiaomu Wei, and Haiyuan Yu. 2018. “Interactome INSIDER: a structural interactome browser for genomic studies.” Nature Methods 15 (2): 107–14. https://doi.org/10.1038/nmeth.4540. Meyer, Michael J, Jishnu Das, Xiujuan Wang, and Haiyuan Yu. 2013. “INstruct: a database of high-quality 3D structurally resolved protein interactome networks.” Bioinformatics (Oxford, England) 29 (12): 1577–79. https://doi.org/10.1093/bioinformatics/btt181. Mosca, Roberto, Arnaud Céol, and Patrick Aloy. 2013. “Interactome3D: adding structural details to protein networks.” Nature Methods 10 (1): 47–53. https://doi.org/10.1038/nmeth.2289. Mucha, Peter J, Thomas Richardson, Kevin Macon, Mason A Porter, and Jukka-Pekka Onnela. 2010. “Community structure in time-dependent, multiscale, and multiplex networks.” Science (New York, N.Y.) 328 (5980): 876–78. https://doi.org/10.1126/science.1184819. Newman, Mark E J. 2018. Networks. https://books.google.com.br/books?hl=en&amp;lr=&amp;id=YdZjDwAAQBAJ&amp;oi=fnd&amp;pg=PP1&amp;dq=networks+an+introduction&amp;ots=V_J-6Ig5uu&amp;sig=wlDx19lsqamr-20U5ZUbEjwW3uM#v=onepage&amp;q=networks an introduction&amp;f=false https://www.ebooks.com/96308191/networks/newman-mark/. Park, Peter J. 2009. “ChIP-seq: Advantages and challenges of a maturing technology.” Nature Publishing Group. https://doi.org/10.1038/nrg2641. Parrish, Jodi R., Keith D. Gulyas, and Russell L. Finley. 2006. “Yeast two-hybrid contributions to interactome mapping.” Elsevier Current Trends. https://doi.org/10.1016/j.copbio.2006.06.006. Piñero, Janet, Juan Manuel Ramírez-Anguita, Josep Saüch-Pitarch, Francesco Ronzano, Emilio Centeno, Ferran Sanz, and Laura I Furlong. 2019. “The DisGeNET Knowledge Platform for Disease Genomics: 2019 Update.” Nucleic Acids Research, November. https://doi.org/10.1093/nar/gkz1021. Radicchi, Filippo, and Alex Arenas. 2013. “Abrupt transition in the structural formation of interconnected networks.” Nature Physics 9 (11): 717–20. https://doi.org/10.1038/nphys2761. Ramos, Erin M, Douglas Hoffman, Heather A Junkins, Donna Maglott, Lon Phan, Stephen T Sherry, Mike Feolo, and Lucia A Hindorff. 2013. “PhenotypeGenotype Integrator (PheGenI): Synthesizing Genome-Wide Association Study (GWAS) Data with Existing Genomic Resources.” European Journal of Human Genetics 22 (1): 144–47. https://doi.org/10.1038/ejhg.2013.96. Rehm, Heidi L., Jonathan S. Berg, Lisa D. Brooks, Carlos D. Bustamante, James P. Evans, Melissa J. Landrum, David H. Ledbetter, et al. 2015. “ClinGen The Clinical Genome Resource.” New England Journal of Medicine 372 (23): 2235–42. https://doi.org/10.1056/nejmsr1406261. Rual, Jean-François, Kavitha Venkatesan, Tong Hao, Tomoko Hirozane-Kishikawa, Amélie Dricot, Ning Li, Gabriel F. Berriz, et al. 2005. “Towards a Proteome-Scale Map of the Human Proteinprotein Interaction Network.” Nature 437 (7062): 1173–78. https://doi.org/10.1038/nature04209. Slack, J. M. W. 2013. “Molecular Biology of the Cell.” In Principles of Tissue Engineering: Fourth Edition. https://doi.org/10.1016/B978-0-12-398358-9.00007-0. Tanase, Cristiana Pistol, Irina Ogrezeanu, and Corin Badiu. 2012. “MicroRNAs.” In Molecular Pathology of Pituitary Adenomas, 91–96. Elsevier. https://doi.org/10.1016/b978-0-12-415830-6.00008-1. Uetz, Peter, Loic Giot, Gerard Cagney, Traci A. Mansfield, Richard S. Judson, James R. Knight, Daniel Lockshon, et al. 2000. “A Comprehensive Analysis of Proteinprotein Interactions in Saccharomyces Cerevisiae.” Nature 403 (6770): 623–27. https://doi.org/10.1038/35001009. Vázquez, Alexei. 2003. “Growing network with local rules: Preferential attachment, clustering hierarchy, and degree correlations.” Physical Review E 67 (5): 056104. https://doi.org/10.1103/PhysRevE.67.056104. Wan, Cuihong, Blake Borgeson, Sadhna Phanse, Fan Tu, Kevin Drew, Greg Clark, Xuejian Xiong, et al. 2015. “Panorama of Ancient Metazoan Macromolecular Complexes.” Nature 525 (7569): 339–44. https://doi.org/10.1038/nature14877. Wishart, David S, Yannick D Feunang, An C Guo, Elvis J Lo, Ana Marcu, Jason R Grant, Tanvir Sajed, et al. 2017. “DrugBank 5.0: A Major Update to the DrugBank Database for 2018.” Nucleic Acids Research 46 (D1): D1074–82. https://doi.org/10.1093/nar/gkx1037. Wishart, David S, Craig Knox, An Chi Guo, Savita Shrivastava, Murtaza Hassanali, Paul Stothard, Zhan Chang, and Jennifer Woolsey. 2006. “DrugBank: a comprehensive resource for in silico drug discovery and exploration.” Nucleic Acids Research 34 (Database issue): D668–72. https://doi.org/10.1093/nar/gkj067. Zhang, B., B.-H. Park, T. Karpinets, and N. F. Samatova. 2008. “From Pull-down Data to Protein Interaction Networks and Complexes with Biological Relevance.” Bioinformatics 24 (7): 979–86. https://doi.org/10.1093/bioinformatics/btn036. Zitnik, Marinka, Monica Agrawal, and Jure Leskovec. 2018. “Modeling polypharmacy side effects with graph convolutional networks.” In Bioinformatics. https://doi.org/10.1093/bioinformatics/bty294. "]]
